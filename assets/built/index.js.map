{"version":3,"file":"index.js","sources":["../js/header.js","../js/darkMode.js","../js/loadMore.js","../js/btnFontColor.js","../js/index.js","../js/copyToClipBoard.js","../js/scrollToTopBtn.js","../js/membershipToggle.js","../js/membershipCards.js","../js/widget.js","../js/mobileSubMenu.js"],"sourcesContent":["export const header = document.querySelector(\".gh-header\");\r\nexport const overlay = document.querySelector(\".gh-mobile-overlay\");\r\nexport const mobileMenu = document.querySelector(\".gh-mobile-menu\");\r\nexport const openMenuBtn = document.querySelector(\"#open-mobile-menu\");\r\nexport const closeMenuBtn = document.querySelector(\"#close-mobile-menu\");\r\nconst navList = document.querySelectorAll(\".gh-nav-list-item\");\r\n\r\nexport const openMobileMenu = () => {\r\n    overlay.classList.remove(\"gh-mobile-overlay--close\");\r\n    overlay.classList.add(\"gh-mobile-overlay--open\");\r\n    overlay.classList.add(\"gh-mobile-overlay--animation-open\");\r\n\r\n    mobileMenu.classList.remove(\"gh-mobile-menu--close\");\r\n    mobileMenu.classList.add(\"gh-mobile-menu--open\");\r\n\r\n    document.documentElement.classList.add(\"gh-lock-scroll\");\r\n\r\n    header.classList.add(\"gh-header--mobile-menu-open\");\r\n};\r\n\r\nexport const closeMobileMenu = () => {\r\n    mobileMenu.classList.remove(\"gh-mobile-menu--open\");\r\n    mobileMenu.classList.add(\"gh-mobile-menu--close\");\r\n\r\n    overlay.classList.remove(\"gh-mobile-overlay--animation-open\");\r\n    overlay.classList.add(\"gh-mobile-overlay--animation-close\");\r\n\r\n    document.documentElement.classList.remove(\"gh-lock-scroll\");\r\n\r\n    header.classList.remove(\"gh-header--mobile-menu-open\");\r\n};\r\n\r\nexport const scrollHandler = (() => {\r\n    let prevScrollYPos = 0;\r\n\r\n    return () => {\r\n        if (window.scrollY > 200) {\r\n            if (window.scrollY > prevScrollYPos) {\r\n                header.classList.add(\"gh-header--hidden\");\r\n                navList.forEach((item) => {\r\n                    item.classList.remove(\"active\");\r\n                });\r\n            } else {\r\n                header.classList.remove(\"gh-header--hidden\");\r\n            }\r\n        }\r\n        prevScrollYPos = window.scrollY;\r\n    };\r\n})();\r\n\r\nexport const toggleOverlayAnimation = () => {\r\n    if (overlay.classList.contains(\"gh-mobile-overlay--animation-close\")) {\r\n        overlay.classList.remove(\"gh-mobile-overlay--open\");\r\n        overlay.classList.remove(\"gh-mobile-overlay--animation-close\");\r\n        overlay.classList.add(\"gh-mobile-overlay--close\");\r\n    }\r\n};\r\n","export const switchThemeBtn = document.querySelector(\".gh-switch-btn\");\r\nexport const rootElem = document.querySelector(\"html[data-theme]\");\r\nconst moonIcon = document.querySelector(\".gh-moon-icon\");\r\nconst sunIcon = document.querySelector(\".gh-sun-icon\");\r\n\r\nexport const changeTwitterCardTheme = () => {\r\n    const tweets = document.querySelectorAll(\"[data-tweet-id]\");\r\n\r\n    const changeTweetsTheme = () => {\r\n        const storedTheme =\r\n            localStorage.getItem(\"data-theme\") ||\r\n            (window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n                ? \"dark\"\r\n                : \"light\");\r\n        const targetTheme = storedTheme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n        const switchTweetTheme = (currentTheme, targetTheme) => {\r\n            tweets.forEach((tweet) => {\r\n                const src = tweet.getAttribute(\"src\");\r\n                tweet.setAttribute(\r\n                    \"src\",\r\n                    src.replace(\"theme=\" + currentTheme, \"theme=\" + targetTheme)\r\n                );\r\n            });\r\n        };\r\n\r\n        switchTweetTheme(targetTheme, storedTheme);\r\n    };\r\n\r\n    if (tweets) {\r\n        changeTweetsTheme();\r\n    }\r\n};\r\n\r\nexport const switchTheme = () => {\r\n    const changeCommentsColorOnToggle = () => {\r\n        const rootElem = document.querySelector(\"html\");\r\n        const theme = rootElem.getAttribute(\"data-theme\");\r\n        const commentsSectionIframe = document.querySelector(\r\n            \"#ghost-comments-root > iframe[title='comments-frame']\"\r\n        );\r\n\r\n        if (commentsSectionIframe) {\r\n            const commentsSection =\r\n                commentsSectionIframe.contentWindow.document.querySelector(\r\n                    \".ghost-display\"\r\n                );\r\n\r\n            if (theme === \"dark\") {\r\n                commentsSection.classList.add(\"dark\");\r\n            } else {\r\n                commentsSection.classList.remove(\"dark\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const currentTheme = rootElem.getAttribute(\"data-theme\");\r\n\r\n    switchIcon(currentTheme);\r\n\r\n    rootElem.setAttribute(\r\n        \"data-theme\",\r\n        currentTheme === \"light\" ? \"dark\" : \"light\"\r\n    );\r\n    localStorage.setItem(\r\n        \"data-theme\",\r\n        currentTheme === \"light\" ? \"dark\" : \"light\"\r\n    );\r\n    changeTwitterCardTheme();\r\n    changeCommentsColorOnToggle();\r\n};\r\n\r\nexport const switchIcon = (theme) => {\r\n    if (theme === \"light\") {\r\n        sunIcon.style.display = \"block\";\r\n        moonIcon.style.display = \"none\";\r\n    } else {\r\n        sunIcon.style.display = \"none\";\r\n        moonIcon.style.display = \"block\";\r\n    }\r\n};\r\n\r\nexport const defineIconTheme = () => {\r\n    const currentTheme = rootElem.getAttribute(\"data-theme\");\r\n\r\n    if (currentTheme === \"light\") {\r\n        sunIcon.style.display = \"none\";\r\n        moonIcon.style.display = \"block\";\r\n    } else {\r\n        sunIcon.style.display = \"block\";\r\n        moonIcon.style.display = \"none\";\r\n    }\r\n};\r\n","class LoadButton {\r\n    constructor(button) {\r\n        this.nextDom = document;\r\n        this.loadBtnElement = button;\r\n        this.container = button\r\n            .closest(\".gh-archive-feed-wrapper\")\r\n            .querySelector(\".gh-posts-feed\");\r\n\r\n        if (button) {\r\n            this.toLoadMore();\r\n            this.loadNextPage();\r\n        }\r\n    }\r\n\r\n    async loadNextPage() {\r\n        const next = this.nextDom.querySelector('link[rel=\"next\"]');\r\n\r\n        if (next) {\r\n            let url = next.href;\r\n\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    this.loadBtnElement.style.display = \"none\";\r\n                    return;\r\n                }\r\n                this.nextDom = document\r\n                    .createRange()\r\n                    .createContextualFragment(await response.text());\r\n            } catch {\r\n                this.loadBtnElement.style.display = \"none\";\r\n            }\r\n        } else {\r\n            this.loadBtnElement.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    toLoadMore() {\r\n        this.loadBtnElement.addEventListener(\"click\", () => {\r\n            this.loadNextPage();\r\n\r\n            for (const post of this.nextDom.querySelectorAll(\r\n                \".gh-posts-feed .gh-posts-feed-post\"\r\n            )) {\r\n                this.container.appendChild(post);\r\n            }\r\n        });\r\n\r\n        this.loadBtnElement.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Enter\") {\r\n                this.loadNextPage();\r\n                for (const post of this.nextDom.querySelectorAll(\r\n                    \".gh-posts-feed .gh-posts-feed-post\"\r\n                )) {\r\n                    this.container.appendChild(post);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const loadMore = () => {\r\n    const btnsLoad = document.querySelectorAll(\".gh-load-more-button\");\r\n\r\n    if (!btnsLoad.length) {\r\n        return;\r\n    }\r\n\r\n    btnsLoad.forEach((btn) => new LoadButton(btn));\r\n};\r\n","const changeFontColor = () => {\r\n  const getContrastYIQ = (rgbColor) => {\r\n    const rgb = rgbColor.slice(4, -1).split(', ');\r\n    const yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n    return yiq >= 128 ? 'dark' : 'light';\r\n  };\r\n  const rootElem = document.documentElement;\r\n  const subscribeBtn = document.querySelector('.gh-header .gh-accent-button');\r\n  if (subscribeBtn) {\r\n    const subscribeBtnColor = window.getComputedStyle(subscribeBtn).backgroundColor;\r\n    const fontColor = getContrastYIQ(subscribeBtnColor);\r\n    rootElem.classList.add(`gh-btns-font-color-${fontColor}`);\r\n  }\r\n};\r\n\r\nexport { changeFontColor };\r\n","// JavaScript files are compiled and minified during the build process to the assets/built folder.\r\n// See available scripts in the package.json file.\r\n\r\n// Import CSS\r\nimport \"../css/index.css\";\r\n\r\n// Import JS\r\n\r\nimport {\r\n    openMenuBtn,\r\n    closeMenuBtn,\r\n    openMobileMenu,\r\n    closeMobileMenu,\r\n    overlay,\r\n    mobileMenu,\r\n    scrollHandler,\r\n    toggleOverlayAnimation,\r\n} from \"./header\";\r\nimport {\r\n    switchTheme,\r\n    switchThemeBtn,\r\n    defineIconTheme,\r\n    changeTwitterCardTheme,\r\n} from \"./darkMode\";\r\nimport { loadMore } from \"./loadMore\";\r\nimport { copyToClipboard } from \"./copyToClipBoard\";\r\nimport { calcHeight } from \"./membershipCards\";\r\nimport { togglePlan } from \"./membershipToggle\";\r\nimport { scrollTop, scrollTopAlign } from \"./scrollToTopBtn\";\r\nimport { changeFontColor } from \"./btnFontColor\";\r\nimport { insertWidget } from \"./widget\";\r\nimport { initMobileSubMenu } from \"./mobileSubMenu\";\r\n\r\n// Function that responsible for changing color of the buttons with accent color background\r\nchangeFontColor();\r\n\r\n// Function responsible for loading more posts\r\nloadMore();\r\n\r\n// Function that copies page's URL to clipboard\r\ncopyToClipboard();\r\n\r\n// Script that handles Dark Mode Button toggling\r\nif (switchThemeBtn) {\r\n    defineIconTheme();\r\n    switchThemeBtn.addEventListener(\"click\", switchTheme);\r\n}\r\n\r\n// Script that handles opening mobile menu\r\nif (openMenuBtn) {\r\n    openMenuBtn.addEventListener(\"click\", openMobileMenu);\r\n}\r\n\r\n// Script that handles closing mobile menu\r\nif (closeMenuBtn) {\r\n    closeMenuBtn.addEventListener(\"click\", closeMobileMenu);\r\n}\r\n\r\n// Script that handles closing mobile menu on outside click\r\nif (overlay) {\r\n    overlay.addEventListener(\"click\", closeMobileMenu);\r\n    overlay.addEventListener(\"animationend\", toggleOverlayAnimation);\r\n}\r\n\r\nif (mobileMenu) {\r\n    mobileMenu.addEventListener(\"click\", (e) => e.stopPropagation());\r\n}\r\n\r\n// Function that scroll page to the top on scroll-to-top button click and fills up progress circle inside scroll to top button\r\nscrollTop();\r\n\r\n// Function that toggles yearly/monthly plan on membership page\r\ntogglePlan();\r\n\r\n// Function that calculates height of the tier cards description on the membership page so descriptions height is the same\r\ncalcHeight();\r\n\r\n// Function that moves scroll-to-top button if page has Portal button\r\nwindow.addEventListener(\"load\", scrollTopAlign);\r\n\r\n// Function that changes twitter embed cards theme based on website theme\r\nwindow.addEventListener(\"load\", changeTwitterCardTheme);\r\n\r\nwindow.addEventListener(\"scroll\", scrollHandler);\r\n\r\n// Function that add custom widget\r\ninsertWidget();\r\n\r\n// Function that init mobile submenu\r\ninitMobileSubMenu();\r\n","const copyToClipboard = () => {\r\n    const shareLinkBtns = document.querySelectorAll(\".copyToClipboardBtn\");\r\n\r\n    const toCopy = (clickedBtn) => {\r\n        const url = window.location.href;\r\n\r\n        const changeText = (btn, success) => {\r\n            if (success) {\r\n                btn.classList.add(\"copied\");\r\n                setTimeout(() => {\r\n                    btn.classList.remove(\"copied\");\r\n                }, 1000);\r\n            } else {\r\n                btn.classList.add(\"notCopied\");\r\n                setTimeout(() => {\r\n                    btn.classList.remove(\"notCopied\");\r\n                }, 1000);\r\n            }\r\n        };\r\n\r\n        navigator.clipboard.writeText(url).then(\r\n            () => {\r\n                changeText(clickedBtn, true);\r\n            },\r\n            () => {\r\n                changeText(clickedBtn, false);\r\n            }\r\n        );\r\n    };\r\n\r\n    if (shareLinkBtns.length) {\r\n        Array.from(shareLinkBtns).forEach((btn) => {\r\n            btn.addEventListener(\"click\", () => toCopy(btn));\r\n        });\r\n    }\r\n};\r\n\r\nexport { copyToClipboard };\r\n","const scrollTop = () => {\r\n  const offset = 200;\r\n  const scrollTopBtn = document.querySelector('.gh-scroll-top-btn');\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  if (scrollTopBtn) {\r\n    const progressPath = document.querySelector('.gh-scroll-top-progress path');\r\n    const pathLength = progressPath.getTotalLength();\r\n    progressPath.style.transition = progressPath.style.WebkitTransition = 'none';\r\n    progressPath.style.strokeDasharray = `${pathLength} ${pathLength}`;\r\n    progressPath.style.strokeDashoffset = pathLength;\r\n    progressPath.getBoundingClientRect();\r\n    progressPath.style.transition = progressPath.style.WebkitTransition =\r\n      'stroke-dashoffset 10ms linear';\r\n    const updateProgress = function () {\r\n      const scroll = window.scrollY || window.scrollTopBtn || document.documentElement.scrollTopBtn;\r\n\r\n      const docHeight = Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.body.clientHeight,\r\n        document.documentElement.clientHeight\r\n      );\r\n\r\n      const windowHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\n      const height = docHeight - windowHeight;\r\n      var progress = pathLength - (scroll * pathLength) / height;\r\n      progressPath.style.strokeDashoffset = progress;\r\n    };\r\n\r\n    updateProgress();\r\n\r\n    scrollTopBtn.addEventListener('click', scrollToTop);\r\n\r\n    window.addEventListener('scroll', () => {\r\n      updateProgress();\r\n\r\n      const scrollPos =\r\n        window.scrollY || window.scrollTop || document.getElementsByTagName('html')[0].scrollTop;\r\n      scrollPos > offset\r\n        ? scrollTopBtn.classList.add('is-active')\r\n        : scrollTopBtn.classList.remove('is-active');\r\n    });\r\n  }\r\n};\r\n\r\nconst scrollTopAlign = () => {\r\n  const scrollTopBtn = document.querySelector('.gh-scroll-top-btn');\r\n  const ghostPortalBtn = document.querySelector('#ghost-portal-root iframe');\r\n  if (ghostPortalBtn && scrollTopBtn) {\r\n    scrollTopBtn.classList.add('alignUp');\r\n  }\r\n};\r\n\r\nexport { scrollTop, scrollTopAlign };\r\n","const togglePlan = () => {\r\n    const togglePlanBtn = document.querySelector(\".gh-membership-toggle-btn\");\r\n    const membershipPage = document.querySelector(\".gh-membership-page\");\r\n    \r\n    const toggle = () => {\r\n        membershipPage.classList.toggle(\"yearly\");\r\n    };\r\n\r\n    if (togglePlanBtn && membershipPage) {\r\n        togglePlanBtn.addEventListener(\"click\", toggle);\r\n    }\r\n};\r\n\r\nexport { togglePlan };\r\n","const calcHeight = () => {\r\n    const membershipCards = document.querySelectorAll(\".gh-tier-card\");\r\n\r\n    if (membershipCards.length && window.innerWidth > 1100) {\r\n        const cardsDescriptions = document.querySelectorAll(\r\n            \".gh-tier-card__desc\"\r\n        );\r\n        let maxHeight = 0;\r\n\r\n        cardsDescriptions.forEach((desc) => {\r\n            if (desc.clientHeight >= maxHeight) {\r\n                maxHeight = desc.clientHeight;\r\n            }\r\n        });\r\n\r\n        cardsDescriptions.forEach((desc) => {\r\n            desc.style.height = `${maxHeight}px`;\r\n        });\r\n    }\r\n};\r\n\r\nexport { calcHeight };\r\n","const insertWidget = () => {\n  const widgetRoot = document.querySelector('#sidebar-custom-widget');\n\n  if (widgetRoot) {\n    const textInput = widgetRoot.textContent;\n    widgetRoot.innerHTML = textInput;\n  }\n};\n\nexport { insertWidget };\n","const initMobileSubMenu = () => {\r\n    const submenuItems = document.querySelectorAll(\".gh-mobile-menu-button\");\r\n\r\n    if (!submenuItems.length) {\r\n        return;\r\n    }\r\n\r\n    const clickHandler = (btn) => {\r\n        const submenu = btn.parentElement;\r\n        const submenuItems = submenu.querySelectorAll(\r\n            \".gh-mobile-submenu__item\"\r\n        );\r\n        const submenuItemsList = submenu.querySelector(\".gh-mobile-submenu\");\r\n\r\n        if (submenu.classList.contains(\"active\")) {\r\n            submenu.classList.remove(\"active\");\r\n            submenuItemsList.style.height = \"0px\";\r\n        } else {\r\n            submenu.classList.add(\"active\");\r\n\r\n            const submenuHeight = Array.from(submenuItems).reduce(\r\n                (accumulator, currentValue) =>\r\n                    accumulator + currentValue.offsetHeight,\r\n                0\r\n            );\r\n            submenuItemsList.style.height = `${submenuHeight}px`;\r\n        }\r\n    };\r\n\r\n    submenuItems.forEach((btn) => {\r\n        btn.addEventListener(\"click\", () => clickHandler(btn));\r\n    });\r\n};\r\n\r\nexport { initMobileSubMenu };\r\n"],"names":["header","document","querySelector","overlay","mobileMenu","openMenuBtn","closeMenuBtn","navList","querySelectorAll","openMobileMenu","classList","remove","add","documentElement","closeMobileMenu","scrollHandler","prevScrollYPos","window","scrollY","forEach","item","toggleOverlayAnimation","contains","switchThemeBtn","rootElem","moonIcon","sunIcon","changeTwitterCardTheme","tweets","changeTweetsTheme","storedTheme","localStorage","getItem","matchMedia","matches","currentTheme","targetTheme","tweet","src","getAttribute","setAttribute","replace","switchTweetTheme","switchTheme","switchIcon","setItem","changeCommentsColorOnToggle","theme","commentsSectionIframe","commentsSection","contentWindow","style","display","LoadButton","constructor","button","this","nextDom","loadBtnElement","container","closest","toLoadMore","loadNextPage","next","url","href","response","fetch","ok","createRange","createContextualFragment","text","addEventListener","post","appendChild","event","key","changeFontColor","subscribeBtn","fontColor","rgbColor","rgb","slice","split","getContrastYIQ","getComputedStyle","backgroundColor","loadMore","btnsLoad","length","btn","copyToClipboard","shareLinkBtns","Array","from","clickedBtn","location","changeText","success","setTimeout","navigator","clipboard","writeText","then","toCopy","e","stopPropagation","scrollTop","scrollTopBtn","scrollToTop","scrollTo","top","behavior","progressPath","pathLength","getTotalLength","transition","WebkitTransition","strokeDasharray","strokeDashoffset","getBoundingClientRect","updateProgress","scroll","docHeight","Math","max","body","scrollHeight","offsetHeight","clientHeight","windowHeight","innerHeight","progress","getElementsByTagName","togglePlan","togglePlanBtn","membershipPage","toggle","calcHeight","innerWidth","cardsDescriptions","maxHeight","desc","height","scrollTopAlign","insertWidget","widgetRoot","textInput","textContent","innerHTML","initMobileSubMenu","submenuItems","submenu","parentElement","submenuItemsList","submenuHeight","reduce","accumulator","currentValue","clickHandler"],"mappings":"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"}